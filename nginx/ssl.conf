# SSL/TLS Configuration for Ask Polestar Influence System Backend
# This configuration provides A+ SSL Labs rating and API security

server {
    listen 80;
    server_name api.askpolestar.com;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name api.askpolestar.com;

    # SSL Certificate Configuration
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_trusted_certificate /etc/nginx/ssl/chain.pem;

    # SSL Security Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security \"max-age=63072000; includeSubDomains; preload\" always;

    # Security Headers
    add_header X-Frame-Options \"DENY\" always;
    add_header X-Content-Type-Options \"nosniff\" always;
    add_header X-XSS-Protection \"1; mode=block\" always;
    add_header Referrer-Policy \"strict-origin-when-cross-origin\" always;
    add_header Content-Security-Policy \"default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; connect-src 'self';\" always;
    add_header Permissions-Policy \"camera=(), microphone=(), geolocation=()\" always;

    # API-specific headers
    add_header X-API-Version \"1.0\" always;
    add_header X-Rate-Limit-Remaining \"$limit_req_remaining\" always;

    # Hide Nginx version
    server_tokens off;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types application/json application/xml application/javascript text/plain text/css text/xml text/javascript;

    # Rate limiting for different endpoints
    limit_req_zone $binary_remote_addr zone=api_general:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=api_auth:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=api_influence:10m rate=50r/s;
    limit_req_zone $api_key zone=api_key:10m rate=1000r/s;

    # Extract API key from header
    map $http_x_api_key $api_key {
        default \"$binary_remote_addr\";
        ~^(?<key>.+)$ $key;
    }

    # Main API location
    location / {
        limit_req zone=api_general burst=200 nodelay;
        
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-API-Key $http_x_api_key;
        proxy_set_header X-Client-ID $http_x_client_id;
        
        # Timeout settings for long-running requests
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # Disable buffering for streaming responses
        proxy_buffering off;
    }

    # Authentication endpoints
    location /auth/ {
        limit_req zone=api_auth burst=20 nodelay;
        
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-API-Key $http_x_api_key;
    }

    # Influence calculation endpoints
    location /api/v1/influence/ {
        limit_req zone=api_influence burst=100 nodelay;
        
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-API-Key $http_x_api_key;
        proxy_set_header X-Client-ID $http_x_client_id;
    }

    # Admin endpoints (restricted)
    location /admin/ {
        # Restrict by IP
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # WebSocket support for real-time updates
    location /ws/ {
        proxy_pass http://backend:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection \"upgrade\";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-API-Key $http_x_api_key;
        
        # WebSocket timeouts
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 '{\"status\":\"healthy\",\"service\":\"influence-system\",\"timestamp\":\"$time_iso8601\"}';
        add_header Content-Type application/json;
    }

    # Metrics endpoint (restricted)
    location /metrics {
        # Restrict by IP
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # API documentation
    location /docs {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Security.txt file
    location /.well-known/security.txt {
        return 301 https://askpolestar.com/security.txt;
    }

    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block access to backup files
    location ~* \.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist|orig)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Error pages
    error_page 400 /400.json;
    error_page 401 /401.json;
    error_page 403 /403.json;
    error_page 404 /404.json;
    error_page 429 /429.json;
    error_page 500 502 503 504 /500.json;

    location = /400.json {
        return 400 '{\"error\":\"Bad Request\",\"message\":\"The request could not be understood by the server\",\"status_code\":400}';
        add_header Content-Type application/json;
    }

    location = /401.json {
        return 401 '{\"error\":\"Unauthorized\",\"message\":\"Authentication credentials were missing or incorrect\",\"status_code\":401}';
        add_header Content-Type application/json;
    }

    location = /403.json {
        return 403 '{\"error\":\"Forbidden\",\"message\":\"You don\\'t have permission to access this resource\",\"status_code\":403}';
        add_header Content-Type application/json;
    }

    location = /404.json {
        return 404 '{\"error\":\"Not Found\",\"message\":\"The requested resource was not found\",\"status_code\":404}';
        add_header Content-Type application/json;
    }

    location = /429.json {
        return 429 '{\"error\":\"Too Many Requests\",\"message\":\"Rate limit exceeded. Please try again later\",\"status_code\":429}';
        add_header Content-Type application/json;
    }

    location = /500.json {
        return 500 '{\"error\":\"Internal Server Error\",\"message\":\"An unexpected error occurred\",\"status_code\":500}';
        add_header Content-Type application/json;
    }

    # Logging
    access_log /var/log/nginx/api_access.log combined;
    error_log /var/log/nginx/api_error.log warn;
}